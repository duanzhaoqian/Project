@{
    ViewBag.Title = "商户后台-登录";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form id="LoginForm" name="LoginForm">
<input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl"/>
<input type="hidden" name="loginCode" value="@ViewBag.ValidateCode"/>
<div class="content_1">
    <div class="w1190 clearFix">
        <div class="login clearFix">
            <div class="login_box">
                <h1> 商户登录</h1>
                <ul>
                    <li>登录名：</li>
                    <li>
                        <input type="text" class="intxt_h24 w248" name="loginName" /></li>
                    <li>密码： </li>
                    <li>
                        <input type="password" class="intxt_h24 w248" name="loginPwd" /></li>
                    <li id="li_validateCode" style="display: none" it="true">
                        <input type="text" class="intxt_h24 w174" id="txt_LoginCode" />
                        <img id="img_code" src="" />
                    </li>
                    <li><a href="#" id="txt_msg" class="cold21b1b"></a><a href="#" class="blue pl66">忘记密码？</a>
                    </li>
                    <li>
                        <input type="button" id="btn_login" class="btn_red w260 blod line30" value="登  录" />
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
</form>
@section scripts{
    <!--局部脚本存放地-->
    <script type="text/javascript">
        $(function () {

            var loginName = $.cookie("kyjzsmerchantloginname");
            $("[name=loginName]").val(loginName);

            var loginerror = $.cookie("kyjzsmerchantloginerror");
            if (loginerror == "t") {
                $("#li_validateCode").show();
                $("#li_validateCode").attr("it", "false");
                ChangeValidateCode();
            }

            //验证码回车登录
            var boolIsFrist = $("#li_validateCode").attr("it");
            $("[name=loginCode]").keydown(function (event) {
                if (event.keyCode == 13 && boolIsFrist == "false") {
                    Submit();
                }
            });
            //密码框回车登录
            $("[name=loginPwd]").keydown(function (event) {
                if (event.keyCode == 13 && boolIsFrist == "true") {
                    Submit();
                }
            });
            //按钮提交
            $("#btn_login").click(function () {
                Submit();
            });

            $("#img_code").click(function () {
                ChangeValidateCode();
            });



        });

        //提交 
        function Submit() {
            var boolIsFrist = $("#li_validateCode").attr("it");
            if (boolIsFrist == "false") {
                var strLoginCode = $("#txt_LoginCode").val();
                $("[name=loginCode]").val(strLoginCode);
                if (strLoginCode.length != 4) {
                    $("#txt_msg").html("请输入正确的验证码！");
                }
            }
            if ($("[name=loginName]").val() <= 1) {
                $("#txt_msg").html("请输入正确的登录名！");
                return false;
            }
            if ($("[name=loginPwd]").val().length < 6) {
                $("#txt_msg").html("密码最少6位！");
                return false;
            }
            $("#btn_login").val("登 录 中 ......");
            $.post("@Url.MerchantSiteUrl().Login", $("#LoginForm").serialize(), function (data) {
                if (data.Action == 1) {
                    $("#btn_login").val("登 录 成 功，正 在 跳 转......");
                    $.cookie("kyjzsmerchantloginname", $("[name=loginName]").val(), { expires: 10 });
                    $.cookie("kyjzsmerchantloginerror", "f");
                    location.href = data.StrUrl;
                } else {
                    $("#btn_login").val("登 录");
                    $.cookie("kyjzsmerchantloginerror", "t");
                    $("#txt_msg").html(data.Message);
                    $("#li_validateCode").show();
                    $("#li_validateCode").attr("it", "false");
                    ChangeValidateCode();
                }
            }, "json");
        }

        //改变验证码
        function ChangeValidateCode() {
            $("#img_code").attr("src", "@Url.MerchantSiteUrl().Common_Code" + "?r=" + Math.random());
        }
        //cookie
        (function (factory) {
            if (typeof define === 'function' && define.amd) {
                // AMD
                define(['jquery'], factory);
            } else if (typeof exports === 'object') {
                // CommonJS
                factory(require('jquery'));
            } else {
                // Browser globals
                factory(jQuery);
            }
        }

        //
        (function ($) {
            var pluses = /\+/g;

            function encode(s) {
                return config.raw ? s : encodeURIComponent(s);
            }

            function decode(s) {
                return config.raw ? s : decodeURIComponent(s);
            }

            function stringifyCookieValue(value) {
                return encode(config.json ? JSON.stringify(value) : String(value));
            }

            function parseCookieValue(s) {
                if (s.indexOf('"') === 0) {
                    // This is a quoted cookie as according to RFC2068, unescape...
                    s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
                }
                try {
                    // Replace server-side written pluses with spaces.
                    // If we can't decode the cookie, ignore it, it's unusable.
                    // If we can't parse the cookie, ignore it, it's unusable.
                    s = decodeURIComponent(s.replace(pluses, ' '));
                    return config.json ? JSON.parse(s) : s;
                } catch (e) {
                }
            }

            function read(s, converter) {
                var value = config.raw ? s : parseCookieValue(s);
                return $.isFunction(converter) ? converter(value) : value;
            }

            var config = $.cookie = function (key, value, options) {
                if (value !== undefined && !$.isFunction(value)) {
                    options = $.extend({}, config.defaults, options);

                    if (typeof options.expires === 'number') {
                        var days = options.expires, t = options.expires = new Date();
                        t.setTime(+t + days * 864e+5);
                    }
                    return (document.cookie = [
                        encode(key), '=', stringifyCookieValue(value),
                        options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
                        options.path ? '; path=' + options.path : '',
                        options.domain ? '; domain=' + options.domain : '',
                        options.secure ? '; secure' : ''
                    ].join(''));
                }
                // Read
                var result = key ? undefined : {};
                // To prevent the for loop in the first place assign an empty array
                // in case there are no cookies at all. Also prevents odd result when
                // calling $.cookie().
                var cookies = document.cookie ? document.cookie.split('; ') : [];
                for (var i = 0, l = cookies.length; i < l; i++) {
                    var parts = cookies[i].split('=');
                    var name = decode(parts.shift());
                    var cookie = parts.join('=');
                    if (key && key === name) {
                        // If second argument (value) is a function it's a converter...
                        result = read(cookie, value);
                        break;
                    }
                    // Prevent storing a cookie that we couldn't decode.
                    if (!key && (cookie = read(cookie)) !== undefined) {
                        result[name] = cookie;
                    }
                }
                return result;
            };
            config.defaults = {};
            $.removeCookie = function (key, options) {
                if ($.cookie(key) === undefined) {
                    return false;
                }
                $.cookie(key, '', $.extend({}, options, { expires: -1 }));
                return !$.cookie(key);
            };

        }));

    </script>
}
